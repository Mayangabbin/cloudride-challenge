# .github/workflows/deploy-ecs.yml

name: Deploy to ECS

on:
  push:
    branches:
      - main
    paths:
      - 'hello-world/**'
      - '.github/workflows/deploy-ecs.yml'

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: hello-world-app
  ECS_CLUSTER: ecs-hello-world-cluster
  ECS_SERVICE: hello-world-service
  ECS_TASK_DEFINITION_FAMILY: hello-world-task

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build-image.outputs.image }}   
    permissions:
      contents: read
      id-token: write # Required for OIDC authentication with AWS
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-ecs-deploy-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./hello-world
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 
      
  deploy-ecs-service:
    runs-on: ubuntu-latest
    needs: build-and-push-image # This job depends on the successful completion of the 'build-and-push-image' job
    permissions:
      contents: read
      id-token: write # Required for OIDC authentication with AWS

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-ecs-deploy-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Get ECR Repository URI
        id: get-ecr-uri
        run: |
          # Use AWS CLI to get the full repository URI directly in this job
          # This command outputs the full URI (e.g., 123456789012.dkr.ecr.eu-west-1.amazonaws.com/hello-world-app)
          ECR_FULL_URI=$(aws ecr describe-repositories \
            --repository-names ${{ env.ECR_REPOSITORY }} \
            --query 'repositories[0].repositoryUri' \
            --output text)
          
          echo "DEBUG: ECR_FULL_URI retrieved in deploy job: $ECR_FULL_URI"
          
          # Output the full URI for use in the next step
          echo "ecr_full_uri=$ECR_FULL_URI" >> $GITHUB_OUTPUT


      - name: Deploy Amazon ECS task definition and update service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_FAMILY }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          # Construct the full image URI using the dynamically retrieved ECR_FULL_URI
          images: |
            hello-world-container=${{ steps.get-ecr-uri.outputs.ecr_full_uri }}:${{ github.sha }}
