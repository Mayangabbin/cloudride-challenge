name: Simple Variable Passing Workflow

on:
  push:
    branches:
      - main 
env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: hello-world-app
  ECS_CLUSTER: ecs-hello-world-cluster
  ECS_SERVICE: hello-world-service
  ECS_TASK_DEFINITION_FAMILY: hello-world-task
  
jobs:

  # Job 1: Sets a variable and outputs it
  set-my-variable-job:
    runs-on: ubuntu-latest
    outputs:
      my_variable: ${{ steps.set_output_step.outputs.my_value }}
    permissions:
      contents: read
      id-token: write # Required  

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-ecs-deploy-role
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Set a custom variable
        id: set_output_step
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}        
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./hello-world
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # Ensure the image output is set correctly for the next step
          echo "my_value=12345/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT # Set the output for the built image
          echo "Image set as: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"        

  # Job 2: Uses the variable from Job 1 and prints it
  use-my-variable-job:
    runs-on: ubuntu-latest
    needs: set-my-variable-job 
    steps:
      - name: Print the variable from Job 1
        run: |
          RECEIVED_VARIABLE="${{ needs.set-my-variable-job.outputs.my_variable }}"
          echo "The variable received from Job 1 is: $RECEIVED_VARIABLE"
